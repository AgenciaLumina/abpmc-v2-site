import { PrismaClient } from "@prisma/client";
import bcrypt from "bcryptjs";
import * as fs from "fs";
import * as path from "path";

const prisma = new PrismaClient();

async function importarSociosDeJSON() {
  // Ler arquivo JSON
  const jsonPath = path.join(__dirname, "socios-completos.json");
  
  if (!fs.existsSync(jsonPath)) {
    console.error("‚ùå Arquivo socios-completos.json n√£o encontrado!");
    console.log("üìù Por favor, crie o arquivo com todos os s√≥cios.");
    return;
  }
  
  const sociosData = JSON.parse(fs.readFileSync(jsonPath, "utf-8"));
  
  console.log(`üöÄ Iniciando importa√ß√£o de ${sociosData.length} s√≥cios...`);
  
  let importados = 0;
  let atualizados = 0;
  let erros = 0;
  
  // Senha padr√£o para todos (DEVE SER ALTERADA NO PRIMEIRO LOGIN)
  const senhaTemporaria = "MudarSenha@2025";
  const senhaHash = await bcrypt.hash(senhaTemporaria, 10);
  
  for (const socio of sociosData) {
    try {
      const resultado = await prisma.associado.upsert({
        where: { email: socio.email },
        update: {
          nome: socio.name,
          curriculoLattes: socio.cv || null,
          visivelNoSite: true,
        },
        create: {
          nome: socio.name,
          email: socio.email,
          senhaHash: senhaHash,
          curriculoLattes: socio.cv || null,
          visivelNoSite: true,
          status: "ATIVO",
          emailVerificado: false,
          role: "ASSOCIADO",
        },
      });
      
      // Verificar se √© novo ou atualizado
      const isNovo = resultado.createdAt.getTime() === resultado.updatedAt.getTime();
      
      if (isNovo) {
        importados++;
        console.log(`‚úÖ [${importados + atualizados}/${sociosData.length}] NOVO: ${socio.name}`);
      } else {
        atualizados++;
        console.log(`üîÑ [${importados + atualizados}/${sociosData.length}] ATUALIZADO: ${socio.name}`);
      }
    } catch (error: any) {
      erros++;
      console.error(`‚ùå ERRO em ${socio.name} (${socio.email}): ${error.message}`);
    }
  }
  
  console.log("\n" + "=".repeat(60));
  console.log("üìä RESUMO DA IMPORTA√á√ÉO:");
  console.log("=".repeat(60));
  console.log(`‚úÖ Novos s√≥cios importados: ${importados}`);
  console.log(`üîÑ S√≥cios atualizados: ${atualizados}`);
  console.log(`‚ùå Erros: ${erros}`);
  console.log(`üìà Total processado: ${importados + atualizados + erros}/${sociosData.length}`);
  console.log("=".repeat(60));
  console.log("\n‚ö†Ô∏è  IMPORTANTE: Senha padr√£o de todos os s√≥cios:");
  console.log(`   ${senhaTemporaria}`);
  console.log("   Os s√≥cios devem alterar a senha no primeiro login!\n");
  console.log("\n‚ú® Acesse o painel admin para gerenciar:");
  console.log("   http://localhost:3000/admin/socios\n");
}

importarSociosDeJSON()
  .then(async () => {
    await prisma.$disconnect();
    console.log("‚úÖ Importa√ß√£o conclu√≠da com sucesso!");
    process.exit(0);
  })
  .catch(async (error) => {
    console.error("‚ùå Erro fatal:", error);
    await prisma.$disconnect();
    process.exit(1);
  });
